//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by SwitchMediator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Runtime.CompilerServices;
using System.Diagnostics;

namespace Mediator.Switch;

#pragma warning disable CS1998

public class SwitchMediator : IMediator
{
    private readonly Test.Ordered.CalculationRequestHandler _test_Ordered_CalculationRequestHandler;
    private readonly Test.Ordered.LoggingBehavior<Test.Ordered.CalculationRequest, int> _test_Ordered_LoggingBehavior__test_Ordered_CalculationRequest;
    private readonly Test.Ordered.ValidationBehavior<Test.Ordered.CalculationRequest, int> _test_Ordered_ValidationBehavior__test_Ordered_CalculationRequest;
    private readonly Test.Ordered.MonitoringBehavior<Test.Ordered.CalculationRequest, int> _test_Ordered_MonitoringBehavior__test_Ordered_CalculationRequest;

    public SwitchMediator(
        Test.Ordered.CalculationRequestHandler test_Ordered_CalculationRequestHandler,
        Test.Ordered.LoggingBehavior<Test.Ordered.CalculationRequest, int> test_Ordered_LoggingBehavior__test_Ordered_CalculationRequest,
        Test.Ordered.ValidationBehavior<Test.Ordered.CalculationRequest, int> test_Ordered_ValidationBehavior__test_Ordered_CalculationRequest,
        Test.Ordered.MonitoringBehavior<Test.Ordered.CalculationRequest, int> test_Ordered_MonitoringBehavior__test_Ordered_CalculationRequest)
    {
        _test_Ordered_CalculationRequestHandler = test_Ordered_CalculationRequestHandler;
        _test_Ordered_LoggingBehavior__test_Ordered_CalculationRequest = test_Ordered_LoggingBehavior__test_Ordered_CalculationRequest;
        _test_Ordered_ValidationBehavior__test_Ordered_CalculationRequest = test_Ordered_ValidationBehavior__test_Ordered_CalculationRequest;
        _test_Ordered_MonitoringBehavior__test_Ordered_CalculationRequest = test_Ordered_MonitoringBehavior__test_Ordered_CalculationRequest;
    }

    public async Task<TResponse> Send<TResponse>(IRequest<TResponse> request)
    {
        switch (request)
        {
            case Test.Ordered.CalculationRequest test_Ordered_CalculationRequest:
                return ToResponse<TResponse>(
                    await HandleCalculationRequestWithBehaviors(test_Ordered_CalculationRequest));
            default:
                throw new ArgumentException($"No handler for {request.GetType().Name}");
        }
    }

    public async Task Publish(INotification notification)
    {
        switch (notification)
        {

            default:
                throw new ArgumentException($"No handlers for {notification.GetType().Name}");
        }
    }

    private async Task<int> HandleCalculationRequestWithBehaviors(Test.Ordered.CalculationRequest request)
    {
        return await _test_Ordered_MonitoringBehavior__test_Ordered_CalculationRequest.Handle(request, async () =>
            await _test_Ordered_ValidationBehavior__test_Ordered_CalculationRequest.Handle(request, async () =>
            await _test_Ordered_LoggingBehavior__test_Ordered_CalculationRequest.Handle(request, async () =>
            await _test_Ordered_CalculationRequestHandler.Handle(request))));
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    [DebuggerStepThrough]
    private T ToResponse<T>(object result)
    {
        return (T) result;
    }
}