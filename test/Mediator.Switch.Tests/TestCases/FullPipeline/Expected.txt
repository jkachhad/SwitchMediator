//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by SwitchMediator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;

namespace Mediator.Switch;

#pragma warning disable CS1998

public class SwitchMediator : IMediator
{
    private readonly Test.FullPipeline.GetUserRequestHandler _test_FullPipeline_GetUserRequestHandler;
    private readonly Test.FullPipeline.CreateOrderRequestHandler _test_FullPipeline_CreateOrderRequestHandler;
    private readonly Test.FullPipeline.AuditBehavior<Test.FullPipeline.GetUserRequest, string> _test_FullPipeline_AuditBehavior__test_FullPipeline_GetUserRequest;
    private readonly Test.FullPipeline.ValidationBehavior<Test.FullPipeline.GetUserRequest, string> _test_FullPipeline_ValidationBehavior__test_FullPipeline_GetUserRequest;
    private readonly Test.FullPipeline.LoggingBehavior<Test.FullPipeline.GetUserRequest, string> _test_FullPipeline_LoggingBehavior__test_FullPipeline_GetUserRequest;
    private readonly Test.FullPipeline.TransactionBehavior<Test.FullPipeline.CreateOrderRequest, int> _test_FullPipeline_TransactionBehavior__test_FullPipeline_CreateOrderRequest;
    private readonly Test.FullPipeline.ValidationBehavior<Test.FullPipeline.CreateOrderRequest, int> _test_FullPipeline_ValidationBehavior__test_FullPipeline_CreateOrderRequest;
    private readonly Test.FullPipeline.LoggingBehavior<Test.FullPipeline.CreateOrderRequest, int> _test_FullPipeline_LoggingBehavior__test_FullPipeline_CreateOrderRequest;
    private readonly IEnumerable<INotificationHandler<Test.FullPipeline.UserLoggedInEvent>> _test_FullPipeline_UserLoggedInEvent__Handlers;

    public SwitchMediator(
        Test.FullPipeline.GetUserRequestHandler test_FullPipeline_GetUserRequestHandler,
        Test.FullPipeline.CreateOrderRequestHandler test_FullPipeline_CreateOrderRequestHandler,
        Test.FullPipeline.AuditBehavior<Test.FullPipeline.GetUserRequest, string> test_FullPipeline_AuditBehavior__test_FullPipeline_GetUserRequest,
        Test.FullPipeline.ValidationBehavior<Test.FullPipeline.GetUserRequest, string> test_FullPipeline_ValidationBehavior__test_FullPipeline_GetUserRequest,
        Test.FullPipeline.LoggingBehavior<Test.FullPipeline.GetUserRequest, string> test_FullPipeline_LoggingBehavior__test_FullPipeline_GetUserRequest,
        Test.FullPipeline.TransactionBehavior<Test.FullPipeline.CreateOrderRequest, int> test_FullPipeline_TransactionBehavior__test_FullPipeline_CreateOrderRequest,
        Test.FullPipeline.ValidationBehavior<Test.FullPipeline.CreateOrderRequest, int> test_FullPipeline_ValidationBehavior__test_FullPipeline_CreateOrderRequest,
        Test.FullPipeline.LoggingBehavior<Test.FullPipeline.CreateOrderRequest, int> test_FullPipeline_LoggingBehavior__test_FullPipeline_CreateOrderRequest,
        IEnumerable<INotificationHandler<Test.FullPipeline.UserLoggedInEvent>> test_FullPipeline_UserLoggedInEvent__Handlers)
    {
        _test_FullPipeline_GetUserRequestHandler = test_FullPipeline_GetUserRequestHandler;
        _test_FullPipeline_CreateOrderRequestHandler = test_FullPipeline_CreateOrderRequestHandler;
        _test_FullPipeline_AuditBehavior__test_FullPipeline_GetUserRequest = test_FullPipeline_AuditBehavior__test_FullPipeline_GetUserRequest;
        _test_FullPipeline_ValidationBehavior__test_FullPipeline_GetUserRequest = test_FullPipeline_ValidationBehavior__test_FullPipeline_GetUserRequest;
        _test_FullPipeline_LoggingBehavior__test_FullPipeline_GetUserRequest = test_FullPipeline_LoggingBehavior__test_FullPipeline_GetUserRequest;
        _test_FullPipeline_TransactionBehavior__test_FullPipeline_CreateOrderRequest = test_FullPipeline_TransactionBehavior__test_FullPipeline_CreateOrderRequest;
        _test_FullPipeline_ValidationBehavior__test_FullPipeline_CreateOrderRequest = test_FullPipeline_ValidationBehavior__test_FullPipeline_CreateOrderRequest;
        _test_FullPipeline_LoggingBehavior__test_FullPipeline_CreateOrderRequest = test_FullPipeline_LoggingBehavior__test_FullPipeline_CreateOrderRequest;
        _test_FullPipeline_UserLoggedInEvent__Handlers = test_FullPipeline_UserLoggedInEvent__Handlers;
    }

    public async Task<TResponse> Send<TResponse>(IRequest<TResponse> request, CancellationToken cancellationToken = default)
    {
        switch (request)
        {
            case Test.FullPipeline.CreateOrderRequest test_FullPipeline_CreateOrderRequest:
                return ToResponse<TResponse>(
                    await HandleCreateOrderRequestWithBehaviors(test_FullPipeline_CreateOrderRequest, cancellationToken));
            case Test.FullPipeline.GetUserRequest test_FullPipeline_GetUserRequest:
                return ToResponse<TResponse>(
                    await HandleGetUserRequestWithBehaviors(test_FullPipeline_GetUserRequest, cancellationToken));
            default:
                throw new ArgumentException($"No handler for {request.GetType().Name}");
        }
    }

    public async Task Publish(INotification notification, CancellationToken cancellationToken = default)
    {
        switch (notification)
        {
            case Test.FullPipeline.UserLoggedInEvent test_FullPipeline_UserLoggedInEvent:
            {
                foreach (var handler in _test_FullPipeline_UserLoggedInEvent__Handlers)
                {
                    await handler.Handle(test_FullPipeline_UserLoggedInEvent, cancellationToken);
                }
                break;
            }
            default:
                throw new ArgumentException($"No handlers for {notification.GetType().Name}");
        }
    }

    private async Task<string> HandleGetUserRequestWithBehaviors(
        Test.FullPipeline.GetUserRequest request,
        CancellationToken cancellationToken)
    {
        return
            await _test_FullPipeline_LoggingBehavior__test_FullPipeline_GetUserRequest.Handle(request, async () =>
            await _test_FullPipeline_ValidationBehavior__test_FullPipeline_GetUserRequest.Handle(request, async () =>
            await _test_FullPipeline_AuditBehavior__test_FullPipeline_GetUserRequest.Handle(request, async () =>
            /* Request Handler */ await _test_FullPipeline_GetUserRequestHandler.Handle(request, cancellationToken),
            cancellationToken),
            cancellationToken),
            cancellationToken);
    }

    private async Task<int> HandleCreateOrderRequestWithBehaviors(
        Test.FullPipeline.CreateOrderRequest request,
        CancellationToken cancellationToken)
    {
        return
            await _test_FullPipeline_LoggingBehavior__test_FullPipeline_CreateOrderRequest.Handle(request, async () =>
            await _test_FullPipeline_ValidationBehavior__test_FullPipeline_CreateOrderRequest.Handle(request, async () =>
            await _test_FullPipeline_TransactionBehavior__test_FullPipeline_CreateOrderRequest.Handle(request, async () =>
            /* Request Handler */ await _test_FullPipeline_CreateOrderRequestHandler.Handle(request, cancellationToken),
            cancellationToken),
            cancellationToken),
            cancellationToken);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    [DebuggerStepThrough]
    private T ToResponse<T>(object result)
    {
        return (T) result;
    }
}