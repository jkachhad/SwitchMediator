//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by SwitchMediator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;

namespace Mediator.Switch;

#pragma warning disable CS1998

public class SwitchMediator : IMediator
{
    private readonly Tests.FullPipeline.GetUserRequestHandler _tests_FullPipeline_GetUserRequestHandler;
    private readonly Tests.FullPipeline.CreateOrderRequestHandler _tests_FullPipeline_CreateOrderRequestHandler;
    private readonly Tests.FullPipeline.AuditBehavior<Tests.FullPipeline.GetUserRequest, string> _tests_FullPipeline_AuditBehavior__tests_FullPipeline_GetUserRequest;
    private readonly Tests.FullPipeline.ValidationBehavior<Tests.FullPipeline.GetUserRequest, string> _tests_FullPipeline_ValidationBehavior__tests_FullPipeline_GetUserRequest;
    private readonly Tests.FullPipeline.LoggingBehavior<Tests.FullPipeline.GetUserRequest, string> _tests_FullPipeline_LoggingBehavior__tests_FullPipeline_GetUserRequest;
    private readonly Tests.FullPipeline.TransactionBehavior<Tests.FullPipeline.CreateOrderRequest, int> _tests_FullPipeline_TransactionBehavior__tests_FullPipeline_CreateOrderRequest;
    private readonly Tests.FullPipeline.ValidationBehavior<Tests.FullPipeline.CreateOrderRequest, int> _tests_FullPipeline_ValidationBehavior__tests_FullPipeline_CreateOrderRequest;
    private readonly Tests.FullPipeline.LoggingBehavior<Tests.FullPipeline.CreateOrderRequest, int> _tests_FullPipeline_LoggingBehavior__tests_FullPipeline_CreateOrderRequest;
    private readonly IEnumerable<INotificationHandler<Tests.FullPipeline.UserLoggedInEvent>> _tests_FullPipeline_UserLoggedInEvent__Handlers;

    public SwitchMediator(
        Tests.FullPipeline.GetUserRequestHandler tests_FullPipeline_GetUserRequestHandler,
        Tests.FullPipeline.CreateOrderRequestHandler tests_FullPipeline_CreateOrderRequestHandler,
        Tests.FullPipeline.AuditBehavior<Tests.FullPipeline.GetUserRequest, string> tests_FullPipeline_AuditBehavior__tests_FullPipeline_GetUserRequest,
        Tests.FullPipeline.ValidationBehavior<Tests.FullPipeline.GetUserRequest, string> tests_FullPipeline_ValidationBehavior__tests_FullPipeline_GetUserRequest,
        Tests.FullPipeline.LoggingBehavior<Tests.FullPipeline.GetUserRequest, string> tests_FullPipeline_LoggingBehavior__tests_FullPipeline_GetUserRequest,
        Tests.FullPipeline.TransactionBehavior<Tests.FullPipeline.CreateOrderRequest, int> tests_FullPipeline_TransactionBehavior__tests_FullPipeline_CreateOrderRequest,
        Tests.FullPipeline.ValidationBehavior<Tests.FullPipeline.CreateOrderRequest, int> tests_FullPipeline_ValidationBehavior__tests_FullPipeline_CreateOrderRequest,
        Tests.FullPipeline.LoggingBehavior<Tests.FullPipeline.CreateOrderRequest, int> tests_FullPipeline_LoggingBehavior__tests_FullPipeline_CreateOrderRequest,
        IEnumerable<INotificationHandler<Tests.FullPipeline.UserLoggedInEvent>> tests_FullPipeline_UserLoggedInEvent__Handlers)
    {
        _tests_FullPipeline_GetUserRequestHandler = tests_FullPipeline_GetUserRequestHandler;
        _tests_FullPipeline_CreateOrderRequestHandler = tests_FullPipeline_CreateOrderRequestHandler;
        _tests_FullPipeline_AuditBehavior__tests_FullPipeline_GetUserRequest = tests_FullPipeline_AuditBehavior__tests_FullPipeline_GetUserRequest;
        _tests_FullPipeline_ValidationBehavior__tests_FullPipeline_GetUserRequest = tests_FullPipeline_ValidationBehavior__tests_FullPipeline_GetUserRequest;
        _tests_FullPipeline_LoggingBehavior__tests_FullPipeline_GetUserRequest = tests_FullPipeline_LoggingBehavior__tests_FullPipeline_GetUserRequest;
        _tests_FullPipeline_TransactionBehavior__tests_FullPipeline_CreateOrderRequest = tests_FullPipeline_TransactionBehavior__tests_FullPipeline_CreateOrderRequest;
        _tests_FullPipeline_ValidationBehavior__tests_FullPipeline_CreateOrderRequest = tests_FullPipeline_ValidationBehavior__tests_FullPipeline_CreateOrderRequest;
        _tests_FullPipeline_LoggingBehavior__tests_FullPipeline_CreateOrderRequest = tests_FullPipeline_LoggingBehavior__tests_FullPipeline_CreateOrderRequest;
        _tests_FullPipeline_UserLoggedInEvent__Handlers = tests_FullPipeline_UserLoggedInEvent__Handlers;
    }

    public Task<TResponse> Send<TResponse>(IRequest<TResponse> request, CancellationToken cancellationToken = default)
    {
        switch (request)
        {
            case Tests.FullPipeline.CreateOrderRequest tests_FullPipeline_CreateOrderRequest:
                return ToResponse<Task<TResponse>>(
                    HandleCreateOrderRequestWithBehaviors(tests_FullPipeline_CreateOrderRequest, cancellationToken));
            case Tests.FullPipeline.GetUserRequest tests_FullPipeline_GetUserRequest:
                return ToResponse<Task<TResponse>>(
                    HandleGetUserRequestWithBehaviors(tests_FullPipeline_GetUserRequest, cancellationToken));
            default:
                throw new ArgumentException($"No handler for {request.GetType().Name}");
        }
    }

    public async Task Publish(INotification notification, CancellationToken cancellationToken = default)
    {
        switch (notification)
        {
            case Tests.FullPipeline.UserLoggedInEvent tests_FullPipeline_UserLoggedInEvent:
            {
                foreach (var handler in _tests_FullPipeline_UserLoggedInEvent__Handlers)
                {
                    await handler.Handle(tests_FullPipeline_UserLoggedInEvent, cancellationToken);
                }
                break;
            }
            default:
                throw new ArgumentException($"No handlers for {notification.GetType().Name}");
        }
    }

    private Task<string> HandleGetUserRequestWithBehaviors(
        Tests.FullPipeline.GetUserRequest request,
        CancellationToken cancellationToken)
    {
        return
            _tests_FullPipeline_LoggingBehavior__tests_FullPipeline_GetUserRequest.Handle(request, () =>
            _tests_FullPipeline_ValidationBehavior__tests_FullPipeline_GetUserRequest.Handle(request, () =>
            _tests_FullPipeline_AuditBehavior__tests_FullPipeline_GetUserRequest.Handle(request, () =>
            /* Request Handler */ _tests_FullPipeline_GetUserRequestHandler.Handle(request, cancellationToken),
            cancellationToken),
            cancellationToken),
            cancellationToken);
    }

    private Task<int> HandleCreateOrderRequestWithBehaviors(
        Tests.FullPipeline.CreateOrderRequest request,
        CancellationToken cancellationToken)
    {
        return
            _tests_FullPipeline_LoggingBehavior__tests_FullPipeline_CreateOrderRequest.Handle(request, () =>
            _tests_FullPipeline_ValidationBehavior__tests_FullPipeline_CreateOrderRequest.Handle(request, () =>
            _tests_FullPipeline_TransactionBehavior__tests_FullPipeline_CreateOrderRequest.Handle(request, () =>
            /* Request Handler */ _tests_FullPipeline_CreateOrderRequestHandler.Handle(request, cancellationToken),
            cancellationToken),
            cancellationToken),
            cancellationToken);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    [DebuggerStepThrough]
    private T ToResponse<T>(object result)
    {
        return (T) result;
    }
}